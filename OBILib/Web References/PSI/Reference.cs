//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.239.
// 
#pragma warning disable 1591

namespace OBILib.PSI {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="PSISoap", Namespace="http://sap.com/bcm/PSI")]
    public partial class PSI : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CreateSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback EndSessionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPresenceProfilesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubscribeUserPresenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnsubscribeUserPresenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPresenceChangesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubscribeConfigChangesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetConfigurationChangesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetUserPresenceOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public PSI() {
            this.Url = global::OBILib.Properties.Settings.Default.OBILib_PSI_PSI;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CreateSessionCompletedEventHandler CreateSessionCompleted;
        
        /// <remarks/>
        public event EndSessionCompletedEventHandler EndSessionCompleted;
        
        /// <remarks/>
        public event GetUsersCompletedEventHandler GetUsersCompleted;
        
        /// <remarks/>
        public event GetPresenceProfilesCompletedEventHandler GetPresenceProfilesCompleted;
        
        /// <remarks/>
        public event SubscribeUserPresenceCompletedEventHandler SubscribeUserPresenceCompleted;
        
        /// <remarks/>
        public event UnsubscribeUserPresenceCompletedEventHandler UnsubscribeUserPresenceCompleted;
        
        /// <remarks/>
        public event GetPresenceChangesCompletedEventHandler GetPresenceChangesCompleted;
        
        /// <remarks/>
        public event SubscribeConfigChangesCompletedEventHandler SubscribeConfigChangesCompleted;
        
        /// <remarks/>
        public event GetConfigurationChangesCompletedEventHandler GetConfigurationChangesCompleted;
        
        /// <remarks/>
        public event SetUserPresenceCompletedEventHandler SetUserPresenceCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sap.com/bcm/PSI/CreateSession", RequestNamespace="http://sap.com/bcm/PSI", ResponseNamespace="http://sap.com/bcm/PSI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CreateSessionResult CreateSession() {
            object[] results = this.Invoke("CreateSession", new object[0]);
            return ((CreateSessionResult)(results[0]));
        }
        
        /// <remarks/>
        public void CreateSessionAsync() {
            this.CreateSessionAsync(null);
        }
        
        /// <remarks/>
        public void CreateSessionAsync(object userState) {
            if ((this.CreateSessionOperationCompleted == null)) {
                this.CreateSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateSessionOperationCompleted);
            }
            this.InvokeAsync("CreateSession", new object[0], this.CreateSessionOperationCompleted, userState);
        }
        
        private void OnCreateSessionOperationCompleted(object arg) {
            if ((this.CreateSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateSessionCompleted(this, new CreateSessionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sap.com/bcm/PSI/EndSession", RequestNamespace="http://sap.com/bcm/PSI", ResponseNamespace="http://sap.com/bcm/PSI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void EndSession(string sessionId) {
            this.Invoke("EndSession", new object[] {
                        sessionId});
        }
        
        /// <remarks/>
        public void EndSessionAsync(string sessionId) {
            this.EndSessionAsync(sessionId, null);
        }
        
        /// <remarks/>
        public void EndSessionAsync(string sessionId, object userState) {
            if ((this.EndSessionOperationCompleted == null)) {
                this.EndSessionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEndSessionOperationCompleted);
            }
            this.InvokeAsync("EndSession", new object[] {
                        sessionId}, this.EndSessionOperationCompleted, userState);
        }
        
        private void OnEndSessionOperationCompleted(object arg) {
            if ((this.EndSessionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EndSessionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sap.com/bcm/PSI/GetUsers", RequestNamespace="http://sap.com/bcm/PSI", ResponseNamespace="http://sap.com/bcm/PSI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("User", IsNullable=false)]
        public UserType[] GetUsers(string sessionId, string[] PSToken) {
            object[] results = this.Invoke("GetUsers", new object[] {
                        sessionId,
                        PSToken});
            return ((UserType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersAsync(string sessionId, string[] PSToken) {
            this.GetUsersAsync(sessionId, PSToken, null);
        }
        
        /// <remarks/>
        public void GetUsersAsync(string sessionId, string[] PSToken, object userState) {
            if ((this.GetUsersOperationCompleted == null)) {
                this.GetUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersOperationCompleted);
            }
            this.InvokeAsync("GetUsers", new object[] {
                        sessionId,
                        PSToken}, this.GetUsersOperationCompleted, userState);
        }
        
        private void OnGetUsersOperationCompleted(object arg) {
            if ((this.GetUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersCompleted(this, new GetUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sap.com/bcm/PSI/GetPresenceProfiles", RequestNamespace="http://sap.com/bcm/PSI", ResponseNamespace="http://sap.com/bcm/PSI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("PresenceProfile", IsNullable=false)]
        public PresenceProfileType[] GetPresenceProfiles() {
            object[] results = this.Invoke("GetPresenceProfiles", new object[0]);
            return ((PresenceProfileType[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPresenceProfilesAsync() {
            this.GetPresenceProfilesAsync(null);
        }
        
        /// <remarks/>
        public void GetPresenceProfilesAsync(object userState) {
            if ((this.GetPresenceProfilesOperationCompleted == null)) {
                this.GetPresenceProfilesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPresenceProfilesOperationCompleted);
            }
            this.InvokeAsync("GetPresenceProfiles", new object[0], this.GetPresenceProfilesOperationCompleted, userState);
        }
        
        private void OnGetPresenceProfilesOperationCompleted(object arg) {
            if ((this.GetPresenceProfilesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPresenceProfilesCompleted(this, new GetPresenceProfilesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sap.com/bcm/PSI/SubscribeUserPresence", RequestNamespace="http://sap.com/bcm/PSI", ResponseNamespace="http://sap.com/bcm/PSI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SubscribeUserPresence(string sessionId, string userId, EventFlags evtFlags) {
            this.Invoke("SubscribeUserPresence", new object[] {
                        sessionId,
                        userId,
                        evtFlags});
        }
        
        /// <remarks/>
        public void SubscribeUserPresenceAsync(string sessionId, string userId, EventFlags evtFlags) {
            this.SubscribeUserPresenceAsync(sessionId, userId, evtFlags, null);
        }
        
        /// <remarks/>
        public void SubscribeUserPresenceAsync(string sessionId, string userId, EventFlags evtFlags, object userState) {
            if ((this.SubscribeUserPresenceOperationCompleted == null)) {
                this.SubscribeUserPresenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubscribeUserPresenceOperationCompleted);
            }
            this.InvokeAsync("SubscribeUserPresence", new object[] {
                        sessionId,
                        userId,
                        evtFlags}, this.SubscribeUserPresenceOperationCompleted, userState);
        }
        
        private void OnSubscribeUserPresenceOperationCompleted(object arg) {
            if ((this.SubscribeUserPresenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubscribeUserPresenceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sap.com/bcm/PSI/UnsubscribeUserPresence", RequestNamespace="http://sap.com/bcm/PSI", ResponseNamespace="http://sap.com/bcm/PSI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UnsubscribeUserPresence(string sessionId, string userId) {
            this.Invoke("UnsubscribeUserPresence", new object[] {
                        sessionId,
                        userId});
        }
        
        /// <remarks/>
        public void UnsubscribeUserPresenceAsync(string sessionId, string userId) {
            this.UnsubscribeUserPresenceAsync(sessionId, userId, null);
        }
        
        /// <remarks/>
        public void UnsubscribeUserPresenceAsync(string sessionId, string userId, object userState) {
            if ((this.UnsubscribeUserPresenceOperationCompleted == null)) {
                this.UnsubscribeUserPresenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnsubscribeUserPresenceOperationCompleted);
            }
            this.InvokeAsync("UnsubscribeUserPresence", new object[] {
                        sessionId,
                        userId}, this.UnsubscribeUserPresenceOperationCompleted, userState);
        }
        
        private void OnUnsubscribeUserPresenceOperationCompleted(object arg) {
            if ((this.UnsubscribeUserPresenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnsubscribeUserPresenceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sap.com/bcm/PSI/GetPresenceChanges", RequestNamespace="http://sap.com/bcm/PSI", ResponseNamespace="http://sap.com/bcm/PSI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute("PresenceNotification", IsNullable=false)]
        public PresenceChangeNotification[] GetPresenceChanges(string sessionId, int timeOut) {
            object[] results = this.Invoke("GetPresenceChanges", new object[] {
                        sessionId,
                        timeOut});
            return ((PresenceChangeNotification[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPresenceChangesAsync(string sessionId, int timeOut) {
            this.GetPresenceChangesAsync(sessionId, timeOut, null);
        }
        
        /// <remarks/>
        public void GetPresenceChangesAsync(string sessionId, int timeOut, object userState) {
            if ((this.GetPresenceChangesOperationCompleted == null)) {
                this.GetPresenceChangesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPresenceChangesOperationCompleted);
            }
            this.InvokeAsync("GetPresenceChanges", new object[] {
                        sessionId,
                        timeOut}, this.GetPresenceChangesOperationCompleted, userState);
        }
        
        private void OnGetPresenceChangesOperationCompleted(object arg) {
            if ((this.GetPresenceChangesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPresenceChangesCompleted(this, new GetPresenceChangesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sap.com/bcm/PSI/SubscribeConfigChanges", RequestNamespace="http://sap.com/bcm/PSI", ResponseNamespace="http://sap.com/bcm/PSI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SubscribeConfigChanges(string sessionId, string[] PSToken) {
            this.Invoke("SubscribeConfigChanges", new object[] {
                        sessionId,
                        PSToken});
        }
        
        /// <remarks/>
        public void SubscribeConfigChangesAsync(string sessionId, string[] PSToken) {
            this.SubscribeConfigChangesAsync(sessionId, PSToken, null);
        }
        
        /// <remarks/>
        public void SubscribeConfigChangesAsync(string sessionId, string[] PSToken, object userState) {
            if ((this.SubscribeConfigChangesOperationCompleted == null)) {
                this.SubscribeConfigChangesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubscribeConfigChangesOperationCompleted);
            }
            this.InvokeAsync("SubscribeConfigChanges", new object[] {
                        sessionId,
                        PSToken}, this.SubscribeConfigChangesOperationCompleted, userState);
        }
        
        private void OnSubscribeConfigChangesOperationCompleted(object arg) {
            if ((this.SubscribeConfigChangesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubscribeConfigChangesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sap.com/bcm/PSI/GetConfigurationChanges", RequestNamespace="http://sap.com/bcm/PSI", ResponseNamespace="http://sap.com/bcm/PSI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public ConfigurationChange[] GetConfigurationChanges(string sessionId) {
            object[] results = this.Invoke("GetConfigurationChanges", new object[] {
                        sessionId});
            return ((ConfigurationChange[])(results[0]));
        }
        
        /// <remarks/>
        public void GetConfigurationChangesAsync(string sessionId) {
            this.GetConfigurationChangesAsync(sessionId, null);
        }
        
        /// <remarks/>
        public void GetConfigurationChangesAsync(string sessionId, object userState) {
            if ((this.GetConfigurationChangesOperationCompleted == null)) {
                this.GetConfigurationChangesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetConfigurationChangesOperationCompleted);
            }
            this.InvokeAsync("GetConfigurationChanges", new object[] {
                        sessionId}, this.GetConfigurationChangesOperationCompleted, userState);
        }
        
        private void OnGetConfigurationChangesOperationCompleted(object arg) {
            if ((this.GetConfigurationChangesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetConfigurationChangesCompleted(this, new GetConfigurationChangesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sap.com/bcm/PSI/SetUserPresence", RequestNamespace="http://sap.com/bcm/PSI", ResponseNamespace="http://sap.com/bcm/PSI", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetUserPresence(string sessionId, string userId, PresenceType presence) {
            this.Invoke("SetUserPresence", new object[] {
                        sessionId,
                        userId,
                        presence});
        }
        
        /// <remarks/>
        public void SetUserPresenceAsync(string sessionId, string userId, PresenceType presence) {
            this.SetUserPresenceAsync(sessionId, userId, presence, null);
        }
        
        /// <remarks/>
        public void SetUserPresenceAsync(string sessionId, string userId, PresenceType presence, object userState) {
            if ((this.SetUserPresenceOperationCompleted == null)) {
                this.SetUserPresenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetUserPresenceOperationCompleted);
            }
            this.InvokeAsync("SetUserPresence", new object[] {
                        sessionId,
                        userId,
                        presence}, this.SetUserPresenceOperationCompleted, userState);
        }
        
        private void OnSetUserPresenceOperationCompleted(object arg) {
            if ((this.SetUserPresenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetUserPresenceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sap.com/bcm/PSI")]
    public partial class CreateSessionResult {
        
        private string sessionIDField;
        
        /// <remarks/>
        public string SessionID {
            get {
                return this.sessionIDField;
            }
            set {
                this.sessionIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sap.com/bcm/PSI")]
    public partial class PresenceType {
        
        private string presenceProfileField;
        
        private System.DateTime endTimeField;
        
        private UserServiceState serviceStateField;
        
        private UserCallState callStateField;
        
        /// <remarks/>
        public string PresenceProfile {
            get {
                return this.presenceProfileField;
            }
            set {
                this.presenceProfileField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EndTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
            }
        }
        
        /// <remarks/>
        public UserServiceState ServiceState {
            get {
                return this.serviceStateField;
            }
            set {
                this.serviceStateField = value;
            }
        }
        
        /// <remarks/>
        public UserCallState CallState {
            get {
                return this.callStateField;
            }
            set {
                this.callStateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sap.com/bcm/PSI")]
    public enum UserServiceState {
        
        /// <remarks/>
        Wrapup,
        
        /// <remarks/>
        Paperwork,
        
        /// <remarks/>
        Working,
        
        /// <remarks/>
        No_Change,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sap.com/bcm/PSI")]
    public enum UserCallState {
        
        /// <remarks/>
        Talking,
        
        /// <remarks/>
        No_Change,
        
        /// <remarks/>
        Idle,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sap.com/bcm/PSI")]
    public partial class ConfigurationChange {
        
        private string objectIdField;
        
        private string objectTypeField;
        
        private string changeIdField;
        
        /// <remarks/>
        public string ObjectId {
            get {
                return this.objectIdField;
            }
            set {
                this.objectIdField = value;
            }
        }
        
        /// <remarks/>
        public string ObjectType {
            get {
                return this.objectTypeField;
            }
            set {
                this.objectTypeField = value;
            }
        }
        
        /// <remarks/>
        public string ChangeId {
            get {
                return this.changeIdField;
            }
            set {
                this.changeIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sap.com/bcm/PSI")]
    public partial class PresenceChangeNotification {
        
        private string userIdField;
        
        private string presenceProfileField;
        
        private System.DateTime endTimeField;
        
        private UserLoginState loginStateField;
        
        private UserCallState callStateField;
        
        private UserServiceState serviceStateField;
        
        /// <remarks/>
        public string UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
            }
        }
        
        /// <remarks/>
        public string PresenceProfile {
            get {
                return this.presenceProfileField;
            }
            set {
                this.presenceProfileField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EndTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
            }
        }
        
        /// <remarks/>
        public UserLoginState LoginState {
            get {
                return this.loginStateField;
            }
            set {
                this.loginStateField = value;
            }
        }
        
        /// <remarks/>
        public UserCallState CallState {
            get {
                return this.callStateField;
            }
            set {
                this.callStateField = value;
            }
        }
        
        /// <remarks/>
        public UserServiceState ServiceState {
            get {
                return this.serviceStateField;
            }
            set {
                this.serviceStateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sap.com/bcm/PSI")]
    public enum UserLoginState {
        
        /// <remarks/>
        Logged_In,
        
        /// <remarks/>
        Logged_Out,
        
        /// <remarks/>
        No_Change,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sap.com/bcm/PSI")]
    public partial class PresenceProfileType {
        
        private string profileIDField;
        
        private string profileNameField;
        
        /// <remarks/>
        public string ProfileID {
            get {
                return this.profileIDField;
            }
            set {
                this.profileIDField = value;
            }
        }
        
        /// <remarks/>
        public string ProfileName {
            get {
                return this.profileNameField;
            }
            set {
                this.profileNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sap.com/bcm/PSI")]
    public partial class UserType {
        
        private string bcmIDField;
        
        private string extIDField;
        
        private string pSTokenField;
        
        private string firstNameField;
        
        private string surNameField;
        
        private string languageField;
        
        private byte typeField;
        
        /// <remarks/>
        public string BcmID {
            get {
                return this.bcmIDField;
            }
            set {
                this.bcmIDField = value;
            }
        }
        
        /// <remarks/>
        public string ExtID {
            get {
                return this.extIDField;
            }
            set {
                this.extIDField = value;
            }
        }
        
        /// <remarks/>
        public string PSToken {
            get {
                return this.pSTokenField;
            }
            set {
                this.pSTokenField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string SurName {
            get {
                return this.surNameField;
            }
            set {
                this.surNameField = value;
            }
        }
        
        /// <remarks/>
        public string Language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        public byte Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sap.com/bcm/PSI")]
    public enum EventFlags {
        
        /// <remarks/>
        All,
        
        /// <remarks/>
        Login_and_Service,
        
        /// <remarks/>
        Call_and_Service,
        
        /// <remarks/>
        Service,
        
        /// <remarks/>
        Call_and_Login,
        
        /// <remarks/>
        Login,
        
        /// <remarks/>
        Call,
        
        /// <remarks/>
        ProfileChangesOnly,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateSessionCompletedEventHandler(object sender, CreateSessionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateSessionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateSessionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CreateSessionResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CreateSessionResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void EndSessionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUsersCompletedEventHandler(object sender, GetUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public UserType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPresenceProfilesCompletedEventHandler(object sender, GetPresenceProfilesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPresenceProfilesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPresenceProfilesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PresenceProfileType[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PresenceProfileType[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SubscribeUserPresenceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UnsubscribeUserPresenceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPresenceChangesCompletedEventHandler(object sender, GetPresenceChangesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPresenceChangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPresenceChangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PresenceChangeNotification[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PresenceChangeNotification[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SubscribeConfigChangesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetConfigurationChangesCompletedEventHandler(object sender, GetConfigurationChangesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetConfigurationChangesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetConfigurationChangesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ConfigurationChange[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ConfigurationChange[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SetUserPresenceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591